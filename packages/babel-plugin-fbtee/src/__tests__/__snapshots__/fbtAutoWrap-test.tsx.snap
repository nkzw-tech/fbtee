// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test jsx auto-wrapping of implicit parameters can handle multiple variations in nested strings 1`] = `
var fbt_sv_arg_0, fbt_sv_arg_1;
import { fbt } from "fbtee";
(fbt_sv_arg_0 = fbt._name("bar", bar, g)),
  (fbt_sv_arg_1 = fbt._plural(num, "baz")),
  fbt._(
    {
      "*": {
        "*": "Level 1 {foo}{=m2}",
        _1: "Level 1 {foo}{=m2}",
      },
    },
    [
      fbt_sv_arg_0,
      fbt_sv_arg_1,
      fbt._param("foo", foo),
      fbt._implicitParam(
        "=m2",
        /*#__PURE__*/ React.createElement(
          "a",
          null,
          fbt._(
            {
              "*": {
                "*": "Level 2 {bar}{=m2}",
                _1: "Level 2 {bar}{=m2}",
              },
            },
            [
              fbt_sv_arg_0,
              fbt_sv_arg_1,
              fbt._implicitParam(
                "=m2",
                /*#__PURE__*/ React.createElement(
                  "b",
                  null,
                  fbt._(
                    {
                      "*": {
                        "*": "Level 3 {baz} cats",
                        _1: "Level 3 1 cat",
                      },
                    },
                    [fbt_sv_arg_0, fbt_sv_arg_1],
                    {
                      hk: "3hoLPG",
                    }
                  )
                )
              ),
            ],
            {
              hk: "1TQlfE",
            }
          )
        )
      ),
    ],
    {
      hk: "2Aoh3a",
    }
  );

`;

exports[`Test jsx auto-wrapping of implicit parameters can handle multiple variations in nested strings and a subject gender 1`] = `
var fbt_sv_arg_0, fbt_sv_arg_1, fbt_sv_arg_2;
import { fbt } from "fbtee";
(fbt_sv_arg_0 = fbt._subject(g0)),
  (fbt_sv_arg_1 = fbt._pronoun(1, g1)),
  (fbt_sv_arg_2 = fbt._plural(num, "foo")),
  fbt._(
    {
      "*": {
        1: {
          "*": "Level 1 {=m1}{=m2}",
          _1: "Level 1 {=m1}{=m2}",
        },
        2: {
          "*": "Level 1 {=m1}{=m2}",
          _1: "Level 1 {=m1}{=m2}",
        },
        "*": {
          "*": "Level 1 {=m1}{=m2}",
          _1: "Level 1 {=m1}{=m2}",
        },
      },
    },
    [
      fbt_sv_arg_0,
      fbt_sv_arg_1,
      fbt_sv_arg_2,
      fbt._implicitParam(
        "=m1",
        /*#__PURE__*/ React.createElement(
          "a",
          {
            href: "#new",
          },
          fbt._(
            {
              "*": {
                1: {
                  "*": "her some_pronoun",
                  _1: "her some_pronoun",
                },
                2: {
                  "*": "his some_pronoun",
                  _1: "his some_pronoun",
                },
                "*": {
                  "*": "their some_pronoun",
                  _1: "their some_pronoun",
                },
              },
            },
            [fbt_sv_arg_0, fbt_sv_arg_1, fbt_sv_arg_2],
            {
              hk: "4sbfj7",
            }
          )
        )
      ),
      fbt._implicitParam(
        "=m2",
        /*#__PURE__*/ React.createElement(
          "b",
          null,
          fbt._(
            {
              "*": {
                1: {
                  "*": "Level 2 {foo} cats",
                  _1: "Level 2 1 cat",
                },
                2: {
                  "*": "Level 2 {foo} cats",
                  _1: "Level 2 1 cat",
                },
                "*": {
                  "*": "Level 2 {foo} cats",
                  _1: "Level 2 1 cat",
                },
              },
            },
            [fbt_sv_arg_0, fbt_sv_arg_1, fbt_sv_arg_2],
            {
              hk: "2Eow7W",
            }
          )
        )
      ),
    ],
    {
      hk: "3S7xV4",
    }
  );

`;

exports[`Test jsx auto-wrapping of implicit parameters can handle multiple variations in nested strings with substrings that look identical 1`] = `
var fbt_sv_arg_0, fbt_sv_arg_1, fbt_sv_arg_2;
import { fbt } from "fbtee";
(fbt_sv_arg_0 = fbt._subject(g0)),
  (fbt_sv_arg_1 = fbt._pronoun(1, g1)),
  (fbt_sv_arg_2 = fbt._pronoun(1, g2)),
  fbt._(
    {
      "*": {
        1: {
          1: "Level 1 {=m1}{=m2}",
          2: "Level 1 {=m1}{=m2}",
          "*": "Level 1 {=m1}{=m2}",
        },
        2: {
          1: "Level 1 {=m1}{=m2}",
          2: "Level 1 {=m1}{=m2}",
          "*": "Level 1 {=m1}{=m2}",
        },
        "*": {
          1: "Level 1 {=m1}{=m2}",
          2: "Level 1 {=m1}{=m2}",
          "*": "Level 1 {=m1}{=m2}",
        },
      },
    },
    [
      fbt_sv_arg_0,
      fbt_sv_arg_1,
      fbt_sv_arg_2,
      fbt._implicitParam(
        "=m1",
        /*#__PURE__*/ React.createElement(
          "a",
          {
            href: "#new",
          },
          fbt._(
            {
              "*": {
                1: {
                  1: "her some_pronoun",
                  2: "her some_pronoun",
                  "*": "her some_pronoun",
                },
                2: {
                  1: "his some_pronoun",
                  2: "his some_pronoun",
                  "*": "his some_pronoun",
                },
                "*": {
                  1: "their some_pronoun",
                  2: "their some_pronoun",
                  "*": "their some_pronoun",
                },
              },
            },
            [fbt_sv_arg_0, fbt_sv_arg_1, fbt_sv_arg_2],
            {
              hk: "3VitZN",
            }
          )
        )
      ),
      fbt._implicitParam(
        "=m2",
        /*#__PURE__*/ React.createElement(
          "b",
          null,
          fbt._(
            {
              "*": {
                1: {
                  1: "Level 2 {=m1}",
                  2: "Level 2 {=m1}",
                  "*": "Level 2 {=m1}",
                },
                2: {
                  1: "Level 2 {=m1}",
                  2: "Level 2 {=m1}",
                  "*": "Level 2 {=m1}",
                },
                "*": {
                  1: "Level 2 {=m1}",
                  2: "Level 2 {=m1}",
                  "*": "Level 2 {=m1}",
                },
              },
            },
            [
              fbt_sv_arg_0,
              fbt_sv_arg_1,
              fbt_sv_arg_2,
              fbt._implicitParam(
                "=m1",
                /*#__PURE__*/ React.createElement(
                  "a",
                  {
                    href: "#new",
                  },
                  fbt._(
                    {
                      "*": {
                        1: {
                          1: "her some_pronoun",
                          2: "his some_pronoun",
                          "*": "their some_pronoun",
                        },
                        2: {
                          1: "her some_pronoun",
                          2: "his some_pronoun",
                          "*": "their some_pronoun",
                        },
                        "*": {
                          1: "her some_pronoun",
                          2: "his some_pronoun",
                          "*": "their some_pronoun",
                        },
                      },
                    },
                    [fbt_sv_arg_0, fbt_sv_arg_1, fbt_sv_arg_2],
                    {
                      hk: "3LBN3N",
                    }
                  )
                )
              ),
            ],
            {
              hk: "2SjiyB",
            }
          )
        )
      ),
    ],
    {
      hk: "4anRqJ",
    }
  );

`;

exports[`Test jsx auto-wrapping of implicit parameters should auto wrap a simple test with a nested level 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{=m0} your video",
  [
    fbt._implicitParam(
      "=m0",
      /*#__PURE__*/ React.createElement(
        Link,
        {
          href: "#",
        },
        fbt._(
          "Your friends {=m1}",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "b",
                null,
                fbt._("liked", null, {
                  hk: "6REFx",
                })
              )
            ),
          ],
          {
            hk: "1h9ToV",
          }
        )
      )
    ),
  ],
  {
    hk: "1C8Sp8",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should auto wrap a simple test with one level 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{=m0} liked your video",
  [
    fbt._implicitParam(
      "=m0",
      /*#__PURE__*/ React.createElement(
        "link",
        {
          href: "#",
        },
        fbt._("Your friends", null, {
          hk: "EXsAo",
        })
      )
    ),
  ],
  {
    hk: "JEQEn",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should work with multiple <fbt> calls in one file 1`] = `
import { fbt } from "fbtee";
/*#__PURE__*/ React.createElement(
  "div",
  null,
  fbt._(
    "{=m0} fbt call",
    [
      fbt._implicitParam(
        "=m0",
        /*#__PURE__*/ React.createElement(
          "div",
          {
            href: "#",
          },
          fbt._("first", null, {
            hk: "20XRQM",
          })
        )
      ),
    ],
    {
      hk: "2oLntp",
    }
  ),
  fbt._(
    "{=m0} test",
    [
      fbt._implicitParam(
        "=m0",
        /*#__PURE__*/ React.createElement(
          "div",
          {
            href: "#",
          },
          fbt._("second", null, {
            hk: "2kqUOm",
          })
        )
      ),
    ],
    {
      hk: "2f9gKU",
    }
  )
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap a <fbt> child nested in an explicit <fbt:param> 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{explicit fbt param}",
  [
    fbt._param(
      "explicit fbt param",
      /*#__PURE__*/ React.createElement(
        "div",
        null,
        fbt._(
          "explicit fbt param {=m1}",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "div",
                null,
                fbt._("with a nested implicit param", null, {
                  hk: "47XKzg",
                })
              )
            ),
          ],
          {
            hk: "4aGXvg",
          }
        )
      )
    ),
  ],
  {
    hk: "1t6SVf",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap a <fbt> child next to an explicit <fbt:param> 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{explicit param next to}{=m1}",
  [
    fbt._param(
      "explicit param next to",
      /*#__PURE__*/ React.createElement(
        "div",
        null,
        fbt._("explicit param next to", null, {
          hk: "4BQGPe",
        })
      )
    ),
    fbt._implicitParam(
      "=m1",
      /*#__PURE__*/ React.createElement(
        "div",
        null,
        fbt._("an implicit param", null, {
          hk: "140tMj",
        })
      )
    ),
  ],
  {
    hk: "voXwD",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap a single unwrapped <fbt> child and a string above 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{=m0} test",
  [
    fbt._implicitParam(
      "=m0",
      /*#__PURE__*/ React.createElement(
        "b",
        null,
        fbt._(
          "This is {=m1}",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "link",
                {
                  href: "#",
                },
                fbt._("a nested", null, {
                  hk: "2neJtx",
                })
              )
            ),
          ],
          {
            hk: "2sVZgG",
          }
        )
      )
    ),
  ],
  {
    hk: "18fFtb",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap a single unwrapped <fbt> child and a string below 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{=m0} a singly nested test",
  [
    fbt._implicitParam(
      "=m0",
      /*#__PURE__*/ React.createElement(
        "div",
        {
          href: "#",
        },
        fbt._("this is", null, {
          hk: "1p5dUU",
        })
      )
    ),
  ],
  {
    hk: "1O44Kn",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap a string next to an explicit <fbt:param> that has a implicit <fbt:param> within it 1`] = `
import { fbt } from "fbtee";
fbt._(
  "outer string that should not appear in inner desc {explicit fbt param}",
  [
    fbt._param(
      "explicit fbt param",
      /*#__PURE__*/ React.createElement(
        "div",
        null,
        fbt._(
          "explicit fbt param {=m1}",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "div",
                null,
                fbt._("with a nested implicit param", null, {
                  hk: "47XKzg",
                })
              )
            ),
          ],
          {
            hk: "4aGXvg",
          }
        )
      )
    ),
  ],
  {
    hk: "1sItWb",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap an outer and inner child 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{=m0} nested test",
  [
    fbt._implicitParam(
      "=m0",
      /*#__PURE__*/ React.createElement(
        "div",
        {
          href: "#",
        },
        fbt._(
          "{=m1} a doubly",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "div",
                {
                  href: "#",
                },
                fbt._("this is", null, {
                  hk: "24utmg",
                })
              )
            ),
          ],
          {
            hk: "1OBj79",
          }
        )
      )
    ),
  ],
  {
    hk: "8VKqN",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap explicit params nested in implicit params with [] 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{=m0}{but free standing ones are not}",
  [
    fbt._param(
      "but free standing ones are not",
      /*#__PURE__*/ React.createElement(
        "link",
        null,
        fbt._(
          "but free standing ones {=m1}",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "b",
                null,
                fbt._("are not", null, {
                  hk: "cn4P1",
                })
              )
            ),
          ],
          {
            hk: "3vSpVu",
          }
        )
      )
    ),
    fbt._implicitParam(
      "=m0",
      /*#__PURE__*/ React.createElement(
        "div",
        null,
        fbt._(
          "this is a test {to make sure that explicit params under an implicit node}{and ones that are next to each other} under an implicit tag are wrapped with [ ]",
          [
            fbt._param(
              "to make sure that explicit params under an implicit node",
              /*#__PURE__*/ React.createElement(
                "link",
                null,
                fbt._(
                  "to make sure that explicit tags {=m1}",
                  [
                    fbt._implicitParam(
                      "=m1",
                      /*#__PURE__*/ React.createElement(
                        "b",
                        null,
                        fbt._("under an implicit node", null, {
                          hk: "3bb4W4",
                        })
                      )
                    ),
                  ],
                  {
                    hk: "tcca3",
                  }
                )
              )
            ),
            fbt._param(
              "and ones that are next to each other",
              /*#__PURE__*/ React.createElement(
                "link",
                null,
                fbt._(
                  "and ones that are next {=m1}",
                  [
                    fbt._implicitParam(
                      "=m1",
                      /*#__PURE__*/ React.createElement(
                        "b",
                        null,
                        fbt._("to each other", null, {
                          hk: "1UQ1NN",
                        })
                      )
                    ),
                  ],
                  {
                    hk: "Z04GD",
                  }
                )
              )
            ),
          ],
          {
            hk: "3J9Kls",
          }
        )
      )
    ),
  ],
  {
    hk: "25v3pA",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap two children with one nested level 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{=m0} nested test {=m2}",
  [
    fbt._implicitParam(
      "=m0",
      /*#__PURE__*/ React.createElement(
        "div",
        {
          href: "#",
        },
        fbt._(
          "{=m1} a doubly",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "div",
                {
                  href: "#",
                },
                fbt._("this is", null, {
                  hk: "1TKqkn",
                })
              )
            ),
          ],
          {
            hk: "36ZVtu",
          }
        )
      )
    ),
    fbt._implicitParam(
      "=m2",
      /*#__PURE__*/ React.createElement(
        "div",
        {
          href: "#",
        },
        fbt._("with an additional level", null, {
          hk: "3seQMP",
        })
      )
    ),
  ],
  {
    hk: "3gjk4F",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap two nested next to each other 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{=m0}{=m1}",
  [
    fbt._implicitParam(
      "=m0",
      /*#__PURE__*/ React.createElement(
        "div",
        {
          href: "#",
        },
        fbt._(
          "one {=m1}",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "div",
                {
                  href: "#",
                },
                fbt._("two", null, {
                  hk: "3iKuUF",
                })
              )
            ),
          ],
          {
            hk: "4adxZQ",
          }
        )
      )
    ),
    fbt._implicitParam(
      "=m1",
      /*#__PURE__*/ React.createElement(
        "div",
        {
          href: "#",
        },
        fbt._(
          "three {=m1}",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "div",
                {
                  href: "#",
                },
                fbt._("four", null, {
                  hk: "n5ibk",
                })
              )
            ),
          ],
          {
            hk: "1O7uqf",
          }
        )
      )
    ),
  ],
  {
    hk: "8Ppxz",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap two nested next to each other with an extra level 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{=m0}{=m1}",
  [
    fbt._implicitParam(
      "=m0",
      /*#__PURE__*/ React.createElement(
        "div",
        {
          href: "#",
        },
        fbt._(
          "one {=m1}",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "div",
                {
                  href: "#",
                },
                fbt._(
                  "two {=m1}",
                  [
                    fbt._implicitParam(
                      "=m1",
                      /*#__PURE__*/ React.createElement(
                        "div",
                        {
                          href: "#",
                        },
                        fbt._("test", null, {
                          hk: "2OdL6Y",
                        })
                      )
                    ),
                  ],
                  {
                    hk: "OL15x",
                  }
                )
              )
            ),
          ],
          {
            hk: "43pnQG",
          }
        )
      )
    ),
    fbt._implicitParam(
      "=m1",
      /*#__PURE__*/ React.createElement(
        "div",
        {
          href: "#",
        },
        fbt._(
          "three {=m1}",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "div",
                {
                  href: "#",
                },
                fbt._("four", null, {
                  hk: "cB79p",
                })
              )
            ),
          ],
          {
            hk: "2TH8xE",
          }
        )
      )
    ),
  ],
  {
    hk: "3UXE0m",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap two unwrapped <fbt> children 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{=m0}{=m1}",
  [
    fbt._implicitParam(
      "=m0",
      /*#__PURE__*/ React.createElement(
        "div",
        null,
        fbt._("wrap once", null, {
          hk: "1K1zDK",
        })
      )
    ),
    fbt._implicitParam(
      "=m1",
      /*#__PURE__*/ React.createElement(
        "div",
        null,
        fbt._("wrap twice", null, {
          hk: "1zVLer",
        })
      )
    ),
  ],
  {
    hk: "2NQyTl",
  }
);

`;

exports[`Test jsx auto-wrapping of implicit parameters should wrap two unwrapped <fbt> children and 1 nested 1`] = `
import { fbt } from "fbtee";
fbt._(
  "{=m0}{=m1} complicated",
  [
    fbt._implicitParam(
      "=m0",
      /*#__PURE__*/ React.createElement(
        "div",
        null,
        fbt._(
          "wrap once {=m1}",
          [
            fbt._implicitParam(
              "=m1",
              /*#__PURE__*/ React.createElement(
                "div",
                null,
                fbt._("and also", null, {
                  hk: "2aIvXj",
                })
              )
            ),
          ],
          {
            hk: "4nWdli",
          }
        )
      )
    ),
    fbt._implicitParam(
      "=m1",
      /*#__PURE__*/ React.createElement(
        "div",
        null,
        fbt._("wrap twice", null, {
          hk: "1fMpSn",
        })
      )
    ),
  ],
  {
    hk: "4rDpDG",
  }
);

`;
